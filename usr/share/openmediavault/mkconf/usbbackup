#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://linux.die.net/man/7/udev
# http://wiki.ubuntuusers.de/udev
# https://wiki.archlinux.org/index.php/Udev#Mount_under_.2Fmedia.3B_use_partition_label_if_present
# http://www.reactivated.net/writing_udev_rules.html#strsubst
# http://webapp5.rrz.uni-hamburg.de/SuSe-Dokumentation/manual/sles-admin_de/manual/sec.udev.rules.html
#
# udevadm info -a -p $(udevadm info -q path -n /dev/sdX)
# udevadm info -a --name=/dev/sdX
# udevadm control --reload-rules
# udevadm test /sys/block/sdX
# udevadm monitor --environment

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

#OMV_USBBACKUP_UDEV_RULE_CONFIG=${OMV_USBBACKUP_UDEV_RULE_CONFIG:-"/etc/udev/rules.d/99-openmediavault-usbbackup.rules"}
OMV_RSNAPSHOT_SCRIPTS_DIR=${OMV_RSNAPSHOT_SCRIPTS_DIR:-"/var/lib/openmediavault/rsnapshot.d"}
OMV_RSNAPSHOT_SCRIPTS_MASK=${OMV_RSNAPSHOT_SCRIPTS_MASK:-"755"}
OMV_RSNAPSHOT_LOGFILE=${OMV_RSNAPSHOT_LOGFILE:-"/var/log/rsnapshot.log"}

# Create the backup jobs. Each job is configured in a seperate script.
mkdir -p ${OMV_RSNAPSHOT_SCRIPTS_DIR}
rm -f ${OMV_RSNAPSHOT_SCRIPTS_DIR}/rsnapshot-*
#rm -f ${OMV_RSNAPSHOT_SCRIPTS_DIR}/sync-*

# Create the scripts regardless if enabled or disabled.
xmlstarlet sel -t -m "//services/rsnapshot/jobs/job" \
  -v "uuid" \
  -i "position() != last()" -n -b \
  ${OMV_CONFIG_FILE} | xmlstarlet unesc |
  while read uuid; do
	  filename="${OMV_RSNAPSHOT_SCRIPTS_DIR}/rsync-${uuid}"
	  runfile="/var/run/rsync-${uuid}"

	  xmlstarlet sel -t -m "//services/rsnapshot/jobs/job[uuid='${uuid}']" \
		-o "#!/bin/sh" -n \
		-o "# This configuration file is auto-generated." -n \
		-o "# WARNING: Do not edit this file, your changes will be lost." -n \
		-o ". /usr/share/openmediavault/scripts/helper-functions" -n \
		-o "cleanup() {" -n \
		-o "  omv_kill_children \$\$" -n \
		-o "  rm -f ${runfile}" -n \
		-o "  exit" -n \
		-o "}" -n \
		-o "[ -e ${runfile} ] && exit 1" -n \
		-v "concat('if ! omv_is_mounted \"${OMV_MOUNT_DIR}/',fsuuid,'\" ; then')" -n \
		-o "    echo \"External storage device not mounted!\"" -n \
		-o "    exit 1" -n \
		-o "fi" -n \
		-o "trap cleanup 0 1 2 5 15" -n \
		-o "touch ${runfile}" -n \
		-i "mode = 'push' and usesubdir = '1'" \
		  -o "# Create target directory on external storage device." -n \
		  -v "concat('mkdir -p \"${OMV_MOUNT_DIR}/',fsuuid,'/')" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_NAME} -o "\"" -n \
		  -v "concat('chmod 777 \"${OMV_MOUNT_DIR}/',fsuuid,'/')" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_NAME} -o "\"" -n \
		-b \
		-o "# Synchronise directories ..." -n \
		-o "echo \"Please wait, syncing <" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_PATH} -v "concat('> to <${OMV_MOUNT_DIR}/',fsuuid)" -i "usesubdir = '1'" -o "/" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_NAME} -b -o "> ...\n\"" -n \
		-o "rsync --verbose --log-file=\"${OMV_RSNAPSHOT_LOGFILE}\"" \
		-i "recursive = '1'" -o " --recursive" -b \
		-i "times = '1'" -o " --times" -b \
		-i "compress = '1'" -o " --compress" -b \
		-i "archive = '1'" -o " --archive" -b \
		-i "delete = '1'" -o " --delete" -b \
		-i "quiet = '1'" -o " --quiet" -b \
		-i "perms = '1'" -o " --perms" -b \
		-i "acls = '1'" -o " --acls" -b \
		-i "xattrs = '1'" -o " --xattrs" -b \
		-i "partial = '1'" -o " --partial" -b \
		-i "string-length(extraoptions) > 0" -v "concat(' ',extraoptions)" -b \
		-i "mode = 'push'" -o " \"" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_PATH} -o "/\"" -v "concat(' \"${OMV_MOUNT_DIR}/',fsuuid)" -i "usesubdir = '1'" -o "/" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_NAME} -b -o "\"" -b \
		-i "mode = 'pull'" -v "concat(' \"${OMV_MOUNT_DIR}/',fsuuid)" -i "usesubdir = '1'" -o "/" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_NAME} -b -o "/\" \"" ${OMV_XMLSTARLET_GET_SHAREDFOLDER_PATH} -o "\"" -b \
		-o " & wait \$!" \
		${OMV_CONFIG_FILE} | xmlstarlet unesc > ${filename}
	  chmod ${OMV_RSNAPSHOT_SCRIPTS_MASK} ${filename}
  done